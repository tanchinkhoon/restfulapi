openapi: "3.0.3"
info:
    title: "ZIPs REST API"
    description: "My first API"
    version: "v1.0"

# this is a comment
servers:
    - url: http://localhost:3000
      description: "Development server"

components:
  schemas:
    states:
      type: string
      enum: [ "MA", "RI", "NH", "ME", "VT", "CT", "NY", "NJ", "PA", 
              "DE", "DC", "MD", "VA", "WV", "NC", "SC", "GA", "FL", 
              "AL", "TN", "MS", "KY", "OH", "IN", "MI", "IA", "WI", 
              "MN", "SD", "ND", "MT", "IL", "MO", "KS", "NE", "LA", 
              "AR", "OK", "TX", "CO", "WY", "ID", "UT", "AZ", "NM", 
              "NV", "CA", "HI", "OR", "WA", "AK" ] 
    city-form:
      type: object
      required: [ "city", "pop", "lat", "lng", "state" ]
      properties:
        city:
          type: string
          description: City name
        pop:
            type: number
            description: City's population
        lat:
          type: number
          description: City's latitude
        lng:
          type: number
          description: City's logitude
        state:
          type: string
          enum: [ "MA", "RI", "NH", "ME", "VT", "CT", "NY", "NJ", "PA", 
                  "DE", "DC", "MD", "VA", "WV", "NC", "SC", "GA", "FL", 
                  "AL", "TN", "MS", "KY", "OH", "IN", "MI", "IA", "WI", 
                  "MN", "SD", "ND", "MT", "IL", "MO", "KS", "NE", "LA", 
                  "AR", "OK", "TX", "CO", "WY", "ID", "UT", "AZ", "NM", 
                  "NV", "CA", "HI", "OR", "WA", "AK" ] 

    city:
      type: object
      properties:
        _id:
          type: string 
          description: Id
        city:
          type: string
          description: City name
        loc:
          type: array
          items:
            type: number
          maxItems: 2
          minItems: 2
        pop:
          type: number
          minimum: 10
        state:
          type: string
          enum: [ "MA", "RI", "NH", "ME", "VT", "CT", "NY", "NJ", "PA", 
                  "DE", "DC", "MD", "VA", "WV", "NC", "SC", "GA", "FL", 
                  "AL", "TN", "MS", "KY", "OH", "IN", "MI", "IA", "WI", 
                  "MN", "SD", "ND", "MT", "IL", "MO", "KS", "NE", "LA", 
                  "AR", "OK", "TX", "CO", "WY", "ID", "UT", "AZ", "NM", 
                  "NV", "CA", "HI", "OR", "WA", "AK" ] 
paths:
  /api/city:
    post:
        description: Add a new city
        operationId: addCity
        requestBody:
            required: true
            # Content-Type
            content:
                application/x-www-form-urlencoded:
                    schema:
                        $ref: "#/components/schemas/city-form"
                application/json:
                    schema:
                        $ref: "#/components/schemas/city"
        responses:
            201:
                description: Success
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                message:
                                    type: string
                            required: [ "message" ]

  /api/state/{stateId}:
    get:
      description: Get cities in a state
      operationId: getCitiesFromState
      parameters:
      - name: stateId
        in: path 
        required: true
        schema:
          $ref: "#/components/schemas/states"
      - name: offset
        in: query 
        schema:
          type: number
          minimum: 0
      - name: limit
        in: query 
        schema:
          type: number
          minimum: 1
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/city"

  /api/states:
      get:
        description: Get a list of all the states
        operationId: getStates
        responses:
            200:
                description: Default result representation
                content:
                    application/json:
                      schema:
                        type: array
                        items:
                          type: string